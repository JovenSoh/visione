services:
  router:
    image: nginx:1.23.2
    ports: ["${VISIONE_PORT}:80"]
    env_file: ["${VISIONE_ROOT}/config.env"]
    volumes:
      - ./router:/etc/nginx/templates/
      - ./web-ui:/usr/share/nginx/html:ro
      - ${VISIONE_ROOT}:/data:ro
    depends_on: ["core"]
    profiles: ["query"]

  core:
    build:
      context: ./core
      args:
        - TOMCAT_MANAGER_USER=${VISIONE_USERNAME}
        - TOMCAT_MANAGER_PASS=${VISIONE_PASSWORD}
    expose: ["8080"]
    volumes:
      - ${VISIONE_ROOT}:/data
    profiles: ["query"]

  color-extraction:
    build: ./analysis/colors
    volumes:
      - ${VISIONE_ROOT}:/data
      - ./common:/usr/src/visione:ro
    profiles: ["analysis"]

  objects-mmdet:
    build: ./analysis/objects-mmdet
    volumes:
      - ${VISIONE_ROOT}:/data
      - ./common:/usr/src/visione:ro
    profiles: ["analysis"]
    deploy: &needs_gpu
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  objects-openimagesv4:
    build: ./analysis/objects-openimagesv4
    volumes:
      - ${VISIONE_ROOT}:/data
      - ${VISIONE_CACHE}:/cache
      - ./common:/usr/src/visione:ro
    profiles: ["analysis"]
    deploy: *needs_gpu

  features-gem:
    build: ./analysis/gem
    shm_size: 2GB
    volumes:
      - ${VISIONE_ROOT}:/data
      - ./common:/usr/src/visione:ro
    profiles: ["analysis"]
    deploy: *needs_gpu
  
  features-clip:
    build: ./analysis/clip
    volumes:
      - ${VISIONE_ROOT}:/data
      - ${VISIONE_CACHE}:/cache
      - ./common:/usr/src/visione:ro
      - ./analysis/clip:/usr/src/app/  # for development
    profiles: ["analysis", "query"]
    deploy: *needs_gpu

  frame-cluster:
    build: ./analysis/frame-cluster
    profiles: ["analysis"]
  
  scene-detection:
    build: ./analysis/scene-detection
    profiles: ["analysis"]
    volumes: 
      - ${VISIONE_ROOT}:/data
  
  str-object-encoder:
    build: ./index/str-object-encoder
    profiles: ["index"]
    volumes:
      - ${VISIONE_ROOT}:/data
      - ./common:/usr/src/visione:ro

  lucene-index-builder:
    build: ./index/lucene-index-builder
    profiles: ["index"]
    volumes:
      - ${VISIONE_ROOT}:/data
